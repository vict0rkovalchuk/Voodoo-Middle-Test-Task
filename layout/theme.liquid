<!doctype html>
<html>
  <head>
    <title>{{ page_title }}</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="description" content="{{ page_description | escape }}">
    <link rel="canonical" href="{{ canonical_url }}">
    <meta name="viewport" content="width=device-width,initial-scale=1,shrink-to-fit=no">
    {{ content_for_header }}
    <!-- Header hook for plugins -->

    <link
    href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Space+Grotesk:wght@300;400;500;700&display=swap"
    rel="stylesheet"
    />
    <style>
      body {
        font-family: 'Roboto', sans-serif;
        font-family: 'Space Grotesk', sans-serif;
      }
    </style>

    <style>
      body {
        font-family: 'Roboto', sans-serif;
        font-family: 'Space Grotesk', sans-serif;
      }

      input:checked + .tab-label::after {
        transform: rotate(-90deg);
      }
      input:checked ~ .tab-content {
        max-height: 100vh;
        padding: 1em;
      }

      input.sidenav__item-number::-webkit-outer-spin-button,
      input.sidenav__item-number::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      } 
    </style>

    {{ 'application.css' | asset_url | stylesheet_tag }}
    {{ 'application.js' | asset_url | script_tag }}
  </head>
  <body class="bg-[#FCF7E6]" >
    {% section 'cart-drawer' %}
    {% section 'header' %}
    <main role="main" class="px-6 xl:px-28 mt-6 md:mt-[100px] mb-[59px] xl:mb-48">
      {{ content_for_layout }}
    </main>
    {% section 'footer' %}

    <script>
      function openCartDrawer() {
        document.getElementById('sideCart').style.right = '0';
        document.querySelector('.sidenav-overlay').style.left = '0';
        document.querySelector('.sidenav-overlay').style.opacity = '1';
        document.body.style.overflow = 'hidden';
      }

      function closeCartDrawer() {
        document.getElementById('sideCart').style.right = '-100%';
        document.querySelector('.sidenav-overlay').style.left = '-100%';
        document.querySelector('.sidenav-overlay').style.opacity = '0';
        document.body.style.overflow = '';
      }

      async function updateCartDrawer() {
        const res = await fetch('/?section_id=cart-drawer');
        const text = await res.text();
        
        const html = document.createElement('div');
        html.innerHTML = text;

        const newBox = html.querySelector('#sideCart').innerHTML;
        const oldBox = document.querySelector('#sideCart');
        
        oldBox.innerHTML = newBox;

        addCartDrawerListeners();
      }

      async function updateCartAJAX(key, qty = 0) {
        const res = await fetch('/cart/update.js', {
        method: 'post',
        headers: {
          "Accept": 'application/json',
          "Content-Type": 'application/json'
        },
        body: JSON.stringify({ updates: { [key]: qty }})
        })
      }

      function addCartDrawerListeners() {
        // Update quantities
        document.querySelectorAll('.sidenav__item-counter button').forEach(button => {
          button.addEventListener('click', async (e) => {
            e.preventDefault();
            // Get line item key
            const key = button.closest('.sidenav__item').getAttribute('data-line-item-key');

            // Get new quantity
            const quantity = button.closest('.sidenav__item').querySelector('input.sidenav__item-number').value;

            let newQuantity;

            switch (button.textContent.trim()) {
              case '+':
                newQuantity = +quantity + 1;
                break;
              case '-':
                newQuantity = +quantity - 1;
                break;
            }

            // AJAX update
            await updateCartAJAX(key, newQuantity);

            // Update cart 
            updateCartDrawer();
          })
        });

        // Delete item
        document.querySelectorAll('.sidenav__item-delete').forEach(item => {
          item.addEventListener('click', async (e) => {
            e.preventDefault();
            // Get line item key
            const key = item.closest('.sidenav__item').getAttribute('data-line-item-key');

            // AJAX update
            await updateCartAJAX(key);

            // Update cart 
            updateCartDrawer();
          })
        })

        // Close cart drawer
        document.querySelector('.sidenav__header-close').addEventListener('click', () => {
          closeCartDrawer();
        })

        document.querySelector(".sidenav-overlay .sidenav").addEventListener("click", (e) => {
          e.stopPropagation();
        });

        document.querySelector('.sidenav-overlay').addEventListener('click', () => {
          closeCartDrawer();
        })
      }

      addCartDrawerListeners();

      document.querySelectorAll('form[action="/cart/add"]').forEach(form => {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();

          // Submit form with ajax
          await fetch('/cart/add', {
            method: "post",
            body: new FormData(form)
          })

          // Update Cart
          await updateCartDrawer();

          // Open cart drawer
          openCartDrawer();
        });
      });

      // Open cart drawer
      document.querySelector('.signup__cart').addEventListener('click', () => {
        openCartDrawer();
      })
    </script>
  </body>
</html>
